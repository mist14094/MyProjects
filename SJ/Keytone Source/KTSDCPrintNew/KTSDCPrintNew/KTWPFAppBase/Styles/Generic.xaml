<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:KTWPFAppBase.Controls"   
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="PresentationOptions">

    <SolidColorBrush  x:Key="TitleBarBackgroundBrush" Color="#FF0D0D0E"/>

    <SolidColorBrush x:Key="BorderBrush" Color="#FF0C0C0C" />

    <Style TargetType="{x:Type local:ImageButton}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}">
                    <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
                        <Image x:Name="PART_img" Source="{Binding Path=ImageNormal, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"  />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Source" Value="{Binding Path=ImageOver, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_img"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Source" Value="{Binding Path=ImageDown, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_img"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:TitleBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TitleBar}">

                    <Border x:Name="TitleBar" DockPanel.Dock="Top" 
               Background="{DynamicResource TitleBarBackgroundBrush}"  
             
               BorderThickness="1,1,1,1" 
               BorderBrush="{StaticResource BorderBrush}"
               CornerRadius="0,0,0,0"  Height="25" >
                        <Grid Height="Auto" Margin="0,0,10,0" Background="{x:Null}">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="22"/>
                                <ColumnDefinition />
                                <ColumnDefinition Width="18"/>
                                <ColumnDefinition Width="18"/>
                                <ColumnDefinition Width="18"/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" x:Name="Icon" Source="{Binding Path=Icon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                     HorizontalAlignment="Right" Margin="5,0,0,0" Width="16" Height="16" />
                            <TextBlock Grid.Column="1" x:Name="Caption" Foreground="#FFD9EAF9"  HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"
						   FontFamily="Corbel"  FontWeight ="Bold" FontSize="14" Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
				  
              
                <local:ImageButton  x:Name="MinButton"  Grid.Column="2"  HorizontalAlignment="Center" VerticalAlignment="Center" 
                  ImageNormal="/Images/min_n.png" 
                  ImageOver="/Images/minhot.png" 
                  ImageDown="/Images/minpressed.png" Width="16" Height="16" 
				Visibility ="{Binding Path=MinBtnVisible, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="#FFFFFFFF"/>
				<!--Click="MinButton_MouseLeftButtonDown" />-->
              
              <local:ImageButton  x:Name="MaxButton"  Grid.Column="3"  HorizontalAlignment="Center" VerticalAlignment="Center"
                   ImageNormal="/Images/max_n.png" 
                   ImageOver="/Images/maxhot.png" 
                   ImageDown="/Images/maxpressed_n.png"  Width="16" Height="16" 
				   Visibility ="{Binding Path=MaxBtnVisible, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="#FFFFFFFF"/>
              <!--Click="MaxButton_MouseLeftButtonDown" />-->
              <local:ImageButton Grid.Column="4" x:Name="CloseButton"   HorizontalAlignment="Center" VerticalAlignment="Center"
                    ImageNormal="/Images/close_n.png" 
                    ImageOver="/Images/closehot_n.png" 
                    ImageDown="/Images/closepressed_n.png" Width="16" Height="16"  
					Visibility ="{Binding Path=CloseBtnVisible, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="#FFFFFFFF"/>
            </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DashBoardButtons" TargetType ="{x:Type Button}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFFFFFFF" Offset="0.777"/>
                    <GradientStop Color="#FF29678A" Offset="0.966"/>
                    <GradientStop Color="#FF216A94" Offset="0.021"/>
                    <GradientStop Color="#FF7BB0D0" Offset="0.391"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsFocused" Value="True"/>
                    <Condition Property="IsKeyboardFocused" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFFFFFF" Offset="0.777"/>
                            <GradientStop Color="#FF216A94" Offset="0.219"/>
                            <GradientStop Color="#FF7BB0D0" Offset="0.391"/>
                            <GradientStop Color="#FFE55D0A" Offset="0.004"/>
                            <GradientStop Color="#FFE55D0A" Offset="0.983"/>
                            <GradientStop Color="#FF407796" Offset="0.853"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFC2A087" Offset="0.58"/>
                            <GradientStop Color="#FFE55D0A" Offset="0.786"/>
                            <GradientStop Color="#FFF96104" Offset="0.295"/>
                            <GradientStop Color="#FF00A8FF" Offset="0"/>
                            <GradientStop Color="#FF009FFF" Offset="0.983"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" RenderDefaulted="{TemplateBinding Button.IsDefaulted}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" ThemeColor="NormalColor">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True"/>
                            </Microsoft_Windows_Themes:ButtonChrome>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="RenderDefaulted" TargetName="Chrome" Value="True"/>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                    <Setter Property="RenderPressed" TargetName="Chrome" Value="True"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#FF515456"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
